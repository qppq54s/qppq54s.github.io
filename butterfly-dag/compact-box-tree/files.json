[
  {
    "filename": "data.js",
    "code": "import Node from './node.js';\n\nconst mockData = {\n  nodes: {\n    isRoot: true,\n    id: 'Root',\n    title: '根节点',\n    content: 'root',\n    iconClass: 'icon-class',\n    iconType: 'icon-shujuji',\n    Class: Node,\n    endpoints: [{\n      id: '1',\n      orientation: [0, 1],\n      pos: [0.5, 0]\n    }],\n    children: [{\n      id: 'subNode1',\n      Class: Node,\n      title: '子节点 1',\n      content: 'sub node 1',\n      // collapsed: true,\n      iconType: 'icon-guize-kai',\n      iconClass: 'icon-class',\n      endpoints: [{\n        id: '1',\n        orientation: [0, -1],\n        pos: [0.5, 0]\n      }, {\n        id: '2',\n        orientation: [0, 1],\n        pos: [0.5, 0]\n      }],\n      children: [{\n        id: 'subNode1-1',\n        Class: Node,\n        title: '子节点 1-1',\n        content: 'sub node 1-1',\n        iconType: 'icon-guize-kai',\n        iconClass: 'icon-class',\n        endpoints: [{\n          id: '1',\n          orientation: [0, -1],\n          pos: [0.5, 0]\n        }, {\n          id: '2',\n          orientation: [0, 1],\n          pos: [0.5, 0]\n        }]\n      }, {\n        id: 'subNode1-2',\n        Class: Node,\n        title: '子节点 1-2',\n        content: 'sub node 1-2',\n        iconType: 'icon-guize-kai',\n        iconClass: 'icon-class',\n        endpoints: [{\n          id: '1',\n          orientation: [0, -1],\n          pos: [0.5, 0]\n        }, {\n          id: '2',\n          orientation: [0, 1],\n          pos: [0.5, 0]\n        }]\n      }]\n    }, {\n      id: 'subNode2',\n      Class: Node,\n      title: '子节点 2',\n      content: 'sub node 2',\n      iconType: 'icon-guize-kai',\n      iconClass: 'icon-class',\n      // collapsed: true,\n      endpoints: [{\n        id: '1',\n        orientation: [0, -1],\n        pos: [0.5, 0]\n      }, {\n        id: '2',\n        orientation: [0, 1],\n        pos: [0.5, 0]\n      }],\n      children: [{\n        id: 'subNode2-1',\n        Class: Node,\n        title: '子节点 2-1',\n        content: 'sub node 2-1',\n        iconType: 'icon-guize-kai',\n        iconClass: 'icon-class',\n        endpoints: [{\n          id: '1',\n          orientation: [0, -1],\n          pos: [0.5, 0]\n        }, {\n          id: '2',\n          orientation: [0, 1],\n          pos: [0.5, 0]\n        }]\n      }, {\n        id: 'subNode2-2',\n        Class: Node,\n        title: '子节点 2-2',\n        content: 'sub node 2-2',\n        iconType: 'icon-guize-kai',\n        iconClass: 'icon-class',\n        endpoints: [{\n          id: '1',\n          orientation: [0, -1],\n          pos: [0.5, 0]\n        }, {\n          id: '2',\n          orientation: [0, 1],\n          pos: [0.5, 0]\n        }]\n      }]\n    }, {\n      id: 'subNode3',\n      Class: Node,\n      title: '子节点 3',\n      content: 'sub node 3',\n      iconType: 'icon-guize-kai',\n      iconClass: 'icon-class',\n      endpoints: [{\n        id: '1',\n        orientation: [0, -1],\n        pos: [0.5, 0]\n      }, {\n        id: '2',\n        orientation: [0, 1],\n        pos: [0.5, 0]\n      }]\n    }]\n  },\n  edges: [{\n    id: '0',\n    source: '1',\n    target: '1',\n    sourceNode: 'Root',\n    targetNode: 'subNode1',\n    type: 'endpoint'\n  }, {\n    id: '1',\n    source: '1',\n    target: '1',\n    sourceNode: 'Root',\n    targetNode: 'subNode2',\n    type: 'endpoint'\n  }, {\n    id: '2',\n    source: '1',\n    target: '1',\n    sourceNode: 'Root',\n    targetNode: 'subNode3',\n    type: 'endpoint'\n  }, {\n    id: '3',\n    source: '2',\n    target: '1',\n    sourceNode: 'subNode1',\n    targetNode: 'subNode1-1',\n    type: 'endpoint'\n  }, {\n    id: '4',\n    source: '2',\n    target: '1',\n    sourceNode: 'subNode1',\n    targetNode: 'subNode1-2',\n    type: 'endpoint'\n  }, {\n    id: '5',\n    source: '2',\n    target: '1',\n    sourceNode: 'subNode2',\n    targetNode: 'subNode2-1',\n    type: 'endpoint'\n  }, {\n    id: '6',\n    source: '2',\n    target: '1',\n    sourceNode: 'subNode2',\n    targetNode: 'subNode2-2',\n    type: 'endpoint'\n  }]\n};\n\nexport default mockData;\n"
  },
  {
    "filename": "index.jsx",
    "code": "import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {TreeCanvas} from 'butterfly-dag';\n\nimport mockData from './data';\n\nimport 'butterfly-dag/dist/index.css';\nimport './index.less';\n\nclass CompactBoxTree extends Component {\n  componentDidMount() {\n    let root = document.getElementById('dag-canvas');\n    this.canvas = new TreeCanvas({\n      root: root,\n      disLinkable: true, // 可删除连线\n      linkable: true,    // 可连线\n      draggable: true,   // 可拖动\n      zoomable: true,    // 可放大\n      moveable: true,    // 可平移\n      theme: {\n        edge: {\n          shapeType: 'Manhattan',\n          arrow: true\n        }\n      },\n      layout: {\n        type: 'compactBox',\n        options: {\n          direction: 'TB',\n          getHeight(d) {\n            return 60;\n          },\n          getWidth(d) {\n            return 120;\n          },\n          getHGap(d) {\n            return 20;\n          },\n          getVGap(d) {\n            return 80;\n          },\n        }\n      }\n    });\n\n    this.canvas.draw(mockData, {}, () => {\n      this.canvas.focusCenterWithAnimate();\n    });\n  }\n\n  render() {\n    return (\n      <div className='compact-box-tree-page'>\n        <div className=\"compact-box-tree-canvas\" id=\"dag-canvas\">\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<CompactBoxTree />, document.getElementById('root'));\n\n"
  },
  {
    "filename": "index.less",
    "code": "@import 'theme.less'; \n.compact-box-tree-page {\n  width: 100%;\n  height: 100%;\n  .compact-box-tree-canvas {\n    width: 100%;\n    height: 100%;\n  }\n}"
  },
  {
    "filename": "node.js",
    "code": "import $ from 'jquery';\nimport {TreeNode} from 'butterfly-dag';\n\nimport './node.less';\n\nclass BaseNode extends TreeNode {\n  draw = (opts) => {\n    let container = $('<div class=\"iot-node\"></div>')\n      .css('top', opts.top + 'px')\n      .css('left', opts.left + 'px')\n      .attr('id', opts.id);\n\n    let titleDom = $(`<div class=\"title ${opts.options.color}\"><i class=\"iconfont ${opts.options.iconType} ${opts.options.iconClass}\"></i>${opts.options.title}<div>`);\n    let contentDom = $(`<div class=\"content\">${opts.options.content}<div>`);\n\n    container.append(titleDom);\n    container.append(contentDom);\n    this.showExpandBtn(container);\n    return container[0];\n  }\n  showExpandBtn(container = this.dom) {\n    let expandBtn = $(`<div class='expand-btn'>···</div>`);\n    expandBtn.on('click', (e) => {\n      e.stopPropagation();\n      e.preventDefault();\n      if (this.collapsed) {\n        // 可以在这里向后端请求数据,把node穿进去expand里面\n        this.expand();\n      } else {\n        this.collapse();\n      }\n    });\n    expandBtn.appendTo(container);\n  }\n}\n\nexport default BaseNode;\n"
  },
  {
    "filename": "node.less",
    "code": "@import 'theme.less'; \n\n\n.iot-node {\n  position: absolute;\n  width: 110px;\n  height: 64px;\n  .title {\n    height: 28px;\n    line-height: 28px;\n    color: @butterfly-overlay-font-color;\n    padding: 0 5px;\n    border-radius: 8.04px 8.04px 0 0;\n    border:@butterfly-box-border;\n    background: @butterfly-primary-color;\n    .icon-class {\n      vertical-align: bottom;\n      margin-right: 5px;\n    }\n  }\n  .content {\n    height: 32px;\n    line-height: 32px;\n    padding: 0 8px;\n    border:@butterfly-box-border;\n    background: @butterfly-theme-color;\n    border-radius: 0 0 8.04px 8.04px;\n    font-size: 12px;\n    color: @butterfly-normal-font-color;\n    text-align: center;\n  }\n  .expand-btn {\n    position: absolute;\n    bottom: -17px;\n    left: 46px;\n    height: 10px;\n    width: 20px;\n    line-height: 8px;\n    text-align: center;\n    border-radius: 4px;\n    border:@butterfly-box-border;\n    box-shadow:@butterfly-box-shadow;\n    background: @butterfly-theme-color;\n    cursor: pointer;\n  }\n  .expand-btn:hover{\n    border:@butterfly-box-node-border-hover;\n    border-radius: 5px;\n  }\n}"
  },
  {
    "filename": "package.json",
    "code": "{\n  \"name\": \"compact-box-tree\",\n  \"cn_name\": \"紧凑盒树\",\n  \"description\": \"a tree which is layout by compact box tree\",\n  \"cn_description\": \"一种利用紧凑盒树进行布局的DAG图\",\n  \"dependencies\": {\n    \"butterfly-dag\": \"*\",\n    \"react\": \"^16.0.0\",\n    \"react-dom\": \"^16.0.0\",\n    \"jquery\": \"*\",\n    \"lodash\": \"*\"\n  }\n}"
  },
  {
    "filename": "theme.less",
    "code": "@butterfly-theme-color-base:#fff;\n@butterfly-normal-font-color-base:#222;;\n@butterfly-overlay-font-color-base:#FFF;\n@butterfly-primary-color-base:#F66902;\n@butterfly-box-border-color-base: #D9D9D9;\n@butterfly-box-shadow-base:0 2px 3px 0 rgba(0,112,204,0.06);\n@butterfly-box-radius-base:100px;\n@butterfly-line-color-base: #BFBFBF;\n// 主题背景色（画布背景色）\n@butterfly-theme-background-color: @butterfly-theme-color-base;\n// （各图形框）普通情况背景色\n@butterfly-theme-color: fade(@butterfly-theme-color-base,80%);\n// 主题色\n@butterfly-primary-color: @butterfly-primary-color-base;\n// 普通情况下字体颜色\n@butterfly-normal-font-color: @butterfly-normal-font-color-base;\n// 主题背景色上的字体颜色及icon颜色\n@butterfly-overlay-font-color: @butterfly-overlay-font-color-base;\n// 拖动时的背景色\n@butterfly-box-move-background-color: fade(@butterfly-primary-color, 20%);\n// 边框的样式\n@butterfly-box-border: 1px solid @butterfly-box-border-color-base;\n@butterfly-box-shadow: @butterfly-box-shadow-base;\n@butterfly-box-radius: @butterfly-box-radius-base;\n@butterfly-box-node-border-hover: 1px solid @butterfly-primary-color;\n// 线条样式\n@butterfly-line-color: @butterfly-line-color-base;"
  }
]