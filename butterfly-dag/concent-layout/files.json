[
  {
    "filename": "center.js",
    "code": "import {Node} from 'butterfly-dag';\nimport $ from 'jquery';\n\nimport './center.less';\n\nclass CenterNode extends Node {\n  constructor(opts) {\n    super(opts);\n    this.options = opts;\n  }\n\n  draw = (opts) => {\n    let container = $('<div class=\"center-new-node\"></div>')\n      .attr('id', opts.id)\n      .css('top', opts.top + 'px')\n      .css('left', opts.left + 'px');\n\n    this._createTypeIcon(container);\n    this._createText(container);\n\n    return container[0];\n  }\n\n  _createTypeIcon(dom = this.dom) {\n    const iconContainer = $(`<span class=\"icon-box ${this.options.className}\"></span>`)[0];\n    const icon = $(`<i class=\"newIconfont ${this.options.iconType}\"></i>`)[0];\n\n    iconContainer.append(icon);\n    $(dom).append(iconContainer);\n  }\n\n  _createText(dom = this.dom) {\n    $('<span class=\"name-box\"></span>').text(this.options.name).appendTo(dom);\n  }\n}\n\nexport default CenterNode;\n"
  },
  {
    "filename": "center.less",
    "code": "@import 'theme.less'; \n\n\n.center-new-node {\n  position: absolute;  \n  height: 60px;\n  line-height: 60px;\n  text-align: center;\n  width: 60px;\n  background: @butterfly-theme-color;\n  border-radius: @butterfly-box-radius;\n  font-size: 12px;\n  border: @butterfly-box-border;\n  box-shadow: @butterfly-box-shadow;\n  color: @butterfly-normal-font-color;\n  \n  .icon-box {\n    display: block;\n    height: 24px;\n    line-height: 24px;\n    width: 24px;\n    border-radius: 12px;\n    margin: 6px auto;\n    position: relative;\n    left: 2px;\n    .newIconfont {\n      color: @butterfly-overlay-font-color;\n    }\n  }\n  .icon-background{\n    background: @butterfly-primary-color;\n  }\n  .name-box {\n    display: block;\n    height: 20px;\n    line-height: 18px;\n    font-size: 12px;\n    text-align: center;\n  }\n  .simple-blue {\n    background: #40A9FF;\n  }\n}\n"
  },
  {
    "filename": "data.js",
    "code": "import Edge from './edge';\nimport Node from './node.js';\nimport Center from './center';\n\nexport default {\n  nodes: [{\n    id: 'test1',\n    name: '小蝴蝶',\n    type: 'main',\n    iconType: 'iconapplication',\n    className: 'icon-background',\n    Class: Center,\n    degree: 10,\n    size: 10,\n  }, {\n    id: 'test2',\n    name: '自定义',\n    type: 'prop',\n    iconType: 'iconapplication',\n    className: 'icon-background',\n    Class: Node,\n    degree: 3,\n    size: 10,\n  }, {\n    id: 'test3',\n    name: '事件',\n    type: 'prop',\n    iconType: 'iconapplication',\n    className: 'icon-background',\n    Class: Node,\n    degree: 3,\n    size: 10,\n  }, {\n    id: 'test4',\n    name: '框选',\n    type: 'prop',\n    iconType: 'iconapplication',\n    className: 'icon-background',\n    Class: Node,\n    degree: 3,\n    size: 10,\n  },\n  {\n    id: 'test5',\n    name: '箭头',\n    type: 'prop',\n    iconType: 'iconapplication',\n    className: 'icon-background',\n    Class: Node,\n    degree: 3,\n    size: 10,\n  }, {\n    id: 'test6',\n    name: '节点',\n    type: 'prop',\n    iconType: 'iconapplication',\n    className: 'icon-background',\n    Class: Node,\n    degree: 3,\n    size: 10,\n  }, {\n    id: 'test7',\n    name: '锚点',\n    type: 'prop',\n    iconType: 'iconapplication',\n    className: 'icon-background',\n    Class: Node,\n    degree: 3,\n    size: 10,\n  }, {\n    id: 'test8',\n    name: '线条',\n    type: 'prop',\n    iconType: 'iconapplication',\n    className: 'icon-background',\n    Class: Node,\n    degree: 3,\n    size: 10,\n  }, {\n    id: 'test9',\n    name: '主题定制',\n    type: 'prop',\n    Class: Node,\n    iconType: 'iconapplication',\n    className: 'icon-background',\n    degree: 3,\n    size: 10,\n  }, {\n    id: 'test10',\n    name: '连接节点',\n    type: 'prop',\n    iconType: 'iconapplication',\n    className: 'icon-background',\n    Class: Node,\n    degree: 3,\n    size: 10,\n  }, {\n    id: 'test11',\n    name: '拖动',\n    type: 'prop',\n    iconType: 'iconapplication',\n    className: 'icon-background',\n    Class: Node,\n    degree: 3,\n    size: 10,\n  }, {\n    id: 'test12',\n    name: '平移',\n    type: 'prop',\n    iconType: 'iconapplication',\n    className: 'icon-background',\n    Class: Node,\n    degree: 3,\n    size: 10,\n  }, {\n    id: 'test13',\n    name: '缩放',\n    type: 'prop',\n    iconType: 'iconapplication',\n    className: 'icon-background',\n    Class: Node,\n    degree: 3,\n    size: 10,\n  }, {\n    id: 'test14',\n    name: 'Minimap',\n    type: 'model',\n    iconType: 'iconapplication',\n    className: 'icon-background',\n    Class: Node,\n    degree: 4,\n    size: 50,\n  }, {\n    id: 'test15',\n    name: 'Eedpoint',\n    type: 'model',\n    iconType: 'iconapplication',\n    className: 'icon-background',\n    Class: Node,\n    degree: 4,\n    size: 50,\n  }, {\n    id: 'test16',\n    name: 'Edge',\n    type: 'model',\n    iconType: 'iconapplication',\n    className: 'icon-background',\n    Class: Node,\n    degree: 4,\n    size: 50,\n  }, {\n    id: 'test17',\n    name: 'Node',\n    type: 'model',\n    iconType: 'iconapplication',\n    className: 'icon-background',\n    Class: Node,\n    degree: 4,\n    size: 50,\n  }, {\n    id: 'test18',\n    name: 'Group',\n    type: 'model',\n    iconType: 'iconapplication',\n    className: 'icon-background',\n    Class: Node,\n    degree: 4,\n    size: 50,\n  }, {\n    id: 'test19',\n    name: 'Canvas',\n    type: 'model',\n    iconType: 'iconapplication',\n    className: 'icon-background',\n    Class: Node,\n    degree: 4,\n    size: 50,\n  },\n  // {\n  //   id: 'test20',\n  //   name: 'Layout',\n  //   type: '1',\n  //   Class:Node,\n  //   degree: 4,\n  //   size: 10,\n  // }\n  ],\n  edges: [{\n    id: 'edge1',\n    source: 'test1',\n    target: 'test1',\n    Class: Edge,\n  }, {\n    id: 'edge2',\n    source: 'test1',\n    target: 'test2',\n    Class: Edge,\n  }, {\n    id: 'edge3',\n    source: 'test1',\n    target: 'test3',\n    Class: Edge,\n  }, {\n    id: 'edge4',\n    source: 'test1',\n    target: 'test4',\n    Class: Edge,\n  }, {\n    id: 'edge5',\n    source: 'test1',\n    target: 'test5',\n    Class: Edge,\n  }, {\n    id: 'edge6',\n    source: 'test1',\n    target: 'test6',\n    Class: Edge,\n  }, {\n    id: 'edge7',\n    source: 'test1',\n    target: 'test7',\n    Class: Edge,\n  }, {\n    id: 'edge8',\n    source: 'test1',\n    target: 'test8',\n    Class: Edge,\n  }, {\n    id: 'edge9',\n    source: 'test1',\n    target: 'test9',\n    Class: Edge,\n  }, {\n    id: 'edge10',\n    source: 'test1',\n    target: 'test10',\n    Class: Edge,\n  }, {\n    id: 'edge11',\n    source: 'test1',\n    target: 'test11',\n    Class: Edge,\n  }, {\n    id: 'edge12',\n    source: 'test1',\n    target: 'test12',\n    Class: Edge,\n  }, {\n    id: 'edge13',\n    source: 'test1',\n    target: 'test13',\n    Class: Edge,\n  }, {\n    id: 'edge14',\n    source: 'test1',\n    target: 'test14',\n    Class: Edge,\n  }, {\n    id: 'edge15',\n    source: 'test1',\n    target: 'test15',\n    Class: Edge,\n  }, {\n    id: 'edge16',\n    source: 'test1',\n    target: 'test16',\n    Class: Edge,\n  }, {\n    id: 'edge17',\n    source: 'test1',\n    target: 'test17',\n    Class: Edge,\n  }, {\n    id: 'edge18',\n    source: 'test1',\n    target: 'test18',\n    Class: Edge,\n  }, {\n    id: 'edge19',\n    source: 'test1',\n    target: 'test19',\n    Class: Edge,\n  }]\n};\n\n"
  },
  {
    "filename": "edge.js",
    "code": "import $ from 'jquery';\nimport {Edge} from 'butterfly-dag';\n\nclass BaseEdge extends Edge {\n  draw(obj) {\n    let path = super.draw(obj);\n    if (this.options.color) {\n      $(path).addClass(this.options.color);\n    }\n    return path;\n  }\n  drawArrow(isShow) {\n    let dom = super.drawArrow(isShow);\n    if (this.options.color) {\n      $(dom).addClass(this.options.color);\n    }\n    return dom;\n  }\n  drawLabel(text) {\n    let dom = null;\n    if (text) {\n      dom = $(`<span class=\"label\">${text}</span>`)[0];\n    }\n    return dom;\n  }\n}\n\nexport default BaseEdge;\n"
  },
  {
    "filename": "index.jsx",
    "code": "import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {Canvas} from 'butterfly-dag';\n\nimport mockData from './data.js';\n\nimport './index.less';\nimport 'butterfly-dag/dist/index.css';\nclass ConcentLayout extends Component {\n  constructor() {\n    super();\n    this.canvas = null;\n  }\n\n  componentDidMount() {\n    let root = document.getElementById('dag-canvas');\n    this.canvas = new Canvas({\n      root: root,\n      disLinkable: true, // 可删除连线\n      linkable: false,    // 可连线\n      draggable: true,   // 可拖动\n      zoomable: true,    // 可放大\n      moveable: true,    // 可平移\n      layout: {\n        type: 'concentricLayout',\n        options: {\n          maxLevelDiff: 0.5,\n          sortBy: 'degree',\n          minNodeSpacing: 40,\n          preventOverlap: true,\n        },\n      },\n    });\n    this.canvas.draw(mockData);\n  }\n\n  render() {\n    return (\n      <div className='concentLayout-page'>\n        <div className=\"flow-canvas\" id=\"dag-canvas\">\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<ConcentLayout />, document.getElementById('root'));\n"
  },
  {
    "filename": "index.less",
    "code": "@import 'theme.less'; \n.concentLayout-page{\n  width: 100%;\n  height: 100%;\n  position: relative;\n  .flow-canvas {\n    width: 100%;\n    height: 100%;\n  }\n  .point {\n    position: absolute;\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    border: 1px solid #000;\n    cursor: pointer;\n  }\n  .point-1 {\n    top: 50px;\n    left: 300px;\n  }\n  .point-2 {\n    top: 300px;\n    left: 500px;\n  }\n}"
  },
  {
    "filename": "node.js",
    "code": "import {Node} from 'butterfly-dag';\nimport $ from 'jquery';\n\nimport './node.less';\n\nclass BaseNode extends Node {\n  constructor(opts) {\n    super(opts);\n    this.options = opts;\n  }\n  draw = (opts) => {\n    let container = $('<div class=\"decision-new-node\"></div>')\n      .attr('id', opts.id)\n      .css('top', opts.top + 'px')\n      .css('left', opts.left + 'px');\n\n    this._createTypeIcon(container);\n    this._createText(container);\n\n    return container[0];\n  }\n  _createTypeIcon(dom = this.dom) {\n    const iconContainer = $(`<span class=\"icon-box ${this.options.className}\"></span>`)[0];\n    const icon = $(`<i class=\"newIconfont ${this.options.iconType}\"></i>`)[0];\n\n    iconContainer.append(icon);\n    $(dom).append(iconContainer);\n  }\n  _createText(dom = this.dom) {\n    $('<span class=\"name-box\"></span>').text(this.options.name).appendTo(dom);\n  }\n}\n\nexport default BaseNode;\n"
  },
  {
    "filename": "node.less",
    "code": "@import 'theme.less'; \n\n\n.decision-new-node {\n  position: absolute;\n  height: 60px;\n  width: 60px;\n  line-height: 60px;\n  text-align: center;\n  background: @butterfly-theme-color;\n  border-radius:@butterfly-box-radius;\n  border: @butterfly-box-border;\n  box-shadow: @butterfly-box-shadow;\n  color: @butterfly-normal-font-color;\n\n  .icon-box {\n    display: inline-block;\n    height: 24px;\n    line-height: 24px;\n    width: 24px;\n    border-radius: 12px;\n    position: relative;\n    left: 2px;\n    .newIconfont {\n      color: @butterfly-overlay-font-color;\n    }\n  }\n  .icon-background{\n    background: @butterfly-primary-color;\n  }\n  .name-box {\n    display: block;\n    height: 60px;\n    line-height: 18px;\n    font-size: 12px;\n    text-align: center;\n  }\n}"
  },
  {
    "filename": "package.json",
    "code": "{\n  \"name\": \"concent-layout\",\n  \"cn_name\": \"中心布局\",\n  \"description\": \"a dag which is layout by concent layout\",\n  \"cn_description\": \"使用中心布局的DAG图\",\n  \"dependencies\": {\n    \"butterfly-dag\": \"*\",\n    \"react\": \"^16.0.0\",\n    \"react-dom\": \"^16.0.0\",\n    \"jquery\": \"*\",\n    \"lodash\": \"*\"\n  }\n}"
  },
  {
    "filename": "theme.less",
    "code": "@butterfly-theme-color-base:#fff;\n@butterfly-normal-font-color-base:#222;;\n@butterfly-overlay-font-color-base:#FFF;\n@butterfly-primary-color-base:#F66902;\n@butterfly-box-border-color-base: #D9D9D9;\n@butterfly-box-shadow-base:0 2px 3px 0 rgba(0,112,204,0.06);\n@butterfly-box-radius-base:100px;\n@butterfly-line-color-base: #BFBFBF;\n// 主题背景色（画布背景色）\n@butterfly-theme-background-color: @butterfly-theme-color-base;\n// （各图形框）普通情况背景色\n@butterfly-theme-color: fade(@butterfly-theme-color-base,80%);\n// 主题色\n@butterfly-primary-color: @butterfly-primary-color-base;\n// 普通情况下字体颜色\n@butterfly-normal-font-color: @butterfly-normal-font-color-base;\n// 主题背景色上的字体颜色及icon颜色\n@butterfly-overlay-font-color: @butterfly-overlay-font-color-base;\n// 拖动时的背景色\n@butterfly-box-move-background-color: fade(@butterfly-primary-color, 20%);\n// 边框的样式\n@butterfly-box-border: 1px solid @butterfly-box-border-color-base;\n@butterfly-box-shadow: @butterfly-box-shadow-base;\n@butterfly-box-radius: @butterfly-box-radius-base;\n@butterfly-box-node-border-hover: 1px solid @butterfly-primary-color;\n// 线条样式\n@butterfly-line-color: @butterfly-line-color-base;"
  }
]