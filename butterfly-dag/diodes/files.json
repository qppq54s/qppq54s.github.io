[
  {
    "filename": "data.js",
    "code": "import Info from './node_info';\nimport Semiconductor from './node_semiconductor';\nimport Edge from './edge';\n\nexport default {\n  nodes: [{\n    id: '0',\n    top: 50,\n    left: 10,\n    type: 'input',\n    Class: Info\n  }, {\n    id: '1',\n    top: 170,\n    left: 150,\n    type: 'semiconductor_1',\n    Class: Semiconductor,\n    inputs: [{\n      id: '0'\n    }],\n    outputs: [{\n      id: '1'\n    }]\n  }, {\n    id: '2',\n    top: 230,\n    left: 380,\n    type: 'semiconductor_2',\n    Class: Semiconductor,\n    inputs: [{\n      id: '0'\n    }, {\n      id: '1'\n    }],\n    outputs: [{\n      id: '2'\n    }]\n  }, {\n    id: '3',\n    top: 40,\n    left: 590,\n    type: 'semiconductor_3',\n    Class: Semiconductor,\n    inputs: [{\n      id: '0'\n    }],\n    outputs: [{\n      id: '1'\n    }]\n  }, {\n    id: '4',\n    top: 65,\n    left: 780,\n    type: 'semiconductor_4',\n    Class: Semiconductor,\n    inputs: [{\n      id: '0'\n    }, {\n      id: '1'\n    }],\n    outputs: [{\n      id: '2'\n    }]\n  }, {\n    id: '5',\n    top: 130,\n    left: 780,\n    type: 'semiconductor_5',\n    Class: Semiconductor,\n    inputs: [{\n      id: '0'\n    }, {\n      id: '1'\n    }],\n    outputs: [{\n      id: '2'\n    }]\n  }, {\n    id: '6',\n    top: 195,\n    left: 780,\n    type: 'semiconductor_6',\n    Class: Semiconductor,\n    inputs: [{\n      id: '0'\n    }, {\n      id: '1'\n    }],\n    outputs: [{\n      id: '2'\n    }]\n  }, {\n    id: '7',\n    top: 260,\n    left: 780,\n    type: 'semiconductor_7',\n    Class: Semiconductor,\n    inputs: [{\n      id: '0'\n    }, {\n      id: '1'\n    }],\n    outputs: [{\n      id: '2'\n    }]\n  }, {\n    id: '8',\n    top: 325,\n    left: 780,\n    type: 'semiconductor_8',\n    Class: Semiconductor,\n    inputs: [{\n      id: '0'\n    }, {\n      id: '1'\n    }],\n    outputs: [{\n      id: '2'\n    }]\n  }, {\n    id: '9',\n    top: 400,\n    left: 570,\n    type: 'output',\n    Class: Info\n  }],\n  edges: [{\n    source: '0',\n    target: '1',\n    sourceNode: '0',\n    targetNode: '1',\n    color: 'purple',\n    type: 'endpoint',\n    Class: Edge\n  }, {\n    source: '0',\n    target: '1',\n    sourceNode: '1',\n    targetNode: '2',\n    type: 'endpoint',\n    Class: Edge\n  }, {\n    source: '0',\n    target: '1',\n    sourceNode: '2',\n    targetNode: '3',\n    type: 'endpoint',\n    Class: Edge\n  }, {\n    source: '0',\n    target: '0',\n    sourceNode: '2',\n    targetNode: '9',\n    type: 'endpoint',\n    Class: Edge\n  }, {\n    source: '0',\n    target: '2',\n    sourceNode: '3',\n    targetNode: '2',\n    color: 'purple',\n    type: 'endpoint',\n    Class: Edge\n  }]\n};\n\n"
  },
  {
    "filename": "edge.js",
    "code": "import {Edge} from 'butterfly-dag';\nimport $ from 'jquery';\nclass BaseEdge extends Edge {\n  draw(obj) {\n    let path = super.draw(obj);\n    if (this.options.color) {\n      $(path).addClass(this.options.color);\n    }\n    return path;\n  }\n}\n\nexport default BaseEdge;\n"
  },
  {
    "filename": "index.jsx",
    "code": "import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {Canvas} from 'butterfly-dag';\n\nimport mockData from './data';\n\nimport 'butterfly-dag/dist/index.css';\nimport './index.less';\n\nclass Diodes extends Component {\n  componentDidMount() {\n    let root = document.getElementById('dag-canvas');\n    this.canvas = new Canvas({\n      root: root,\n      disLinkable: true, // 可删除连线\n      linkable: true,    // 可连线\n      draggable: true,   // 可拖动\n      zoomable: true,    // 可放大\n      moveable: true,    // 可平移\n      theme: {\n        edge: {\n          shapeType: 'Manhattan',\n          defaultAnimate: true\n        }\n      }\n    });\n    this.canvas.draw(mockData);\n  }\n\n  render() {\n    return (\n      <div className='diodes-page'>\n        <div className=\"diodes-canvas\" id=\"dag-canvas\">\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Diodes />, document.getElementById('root'));\n"
  },
  {
    "filename": "index.less",
    "code": "@import 'theme.less'; \n.diodes-page {\n  width: 100%;\n  height: 100%;\n  .diodes-canvas {\n    width: 100%;\n    height: 100%;\n    background-color: white;\n    .diodes-base-node {\n      position: absolute;\n      padding: 0;\n      width: 100px;\n      height: 45px;\n      text-align: center;\n      vertical-align: middle;\n      border-radius: 5px;\n      &:hover {\n        border: none;  \n      }\n      .text {\n        display: inline-block;\n        width: 100%;\n        height: 100%;\n        color: #fff;\n        text-align: center;\n        font-size: 15px;\n        font-weight: 900;\n        line-height: 40px;\n      }\n      img {\n        display: inline-block;\n        width: 100%;\n        height: 100%;\n      }\n      .point {\n        position: absolute;\n        width: 20px;\n        height: 20px;\n        border: 2px solid #c0c5c6;\n        border-radius: 50%;\n        background: #fff;\n        &.output-point {\n          left: -45px;\n          top: calc(~ \"50% - 10px\");\n        }\n        &.input-point {\n          right: -45px;\n          top: calc(~ \"50% - 10px\");\n        }\n        &.output-point-0 {\n          right: -18px;\n          top: calc(~ \"50% - 10px\");\n        }\n        &.input-point-0 {\n          left: -18px;\n          top: calc(~ \"50% - 10px\");\n        }\n        &.input-point-1 {\n          left: -18px;\n          top: calc(~ \"33.33% - 15px\");\n        }\n        &.input-point-2 {\n          left: -18px;\n          top: calc(~ \"66.66% - 5px\");\n        }\n      }\n    }\n    .info-node {\n      width: 100px;\n      height: 40px;\n      background: #86dad4;\n      color: #fff;\n      .line {\n        position: absolute;\n        top: 19px;\n        width: 40px;\n        height: 0;\n        border: 1px solid #000;\n        &.input-line {\n          right: -40px;\n        }\n        &.output-line {\n          left: -40px;\n        }\n      }\n    }\n    .butterflies-link {\n      stroke: #999;\n      stroke-width: 3px;\n      &.purple {\n        stroke: #776ef3;\n      }\n    }\n  }\n}"
  },
  {
    "filename": "node_info.js",
    "code": "import _ from 'lodash';\nimport $ from 'jquery';\nimport {Node} from 'butterfly-dag';\n\nclass Input extends Node {\n  constructor(opts) {\n    super(opts);\n    // 自定义变量\n    this.endpointDom = null;\n  }\n\n  mounted() {\n    this.addEndpoint({\n      id: '0',\n      type: this.options.type === 'input' ? 'source' : 'target',\n      dom: this.endpointDom\n    });\n  }\n\n  draw = (data) => {\n    let container = $(`<div class=\"diodes-base-node info-node ${data.options.type}-node\"></div>`)\n      .css('top', data.top)\n      .css('left', data.left)\n      .attr('id', data.id);\n\n    container.append($(`<span class=\"text\">${_.get(data, 'options.type').toUpperCase()}</span>`));\n\n    container.append($(`<div class=\"line ${data.options.type}-line\"></div>`));\n\n    this.endpointDom = $(`<div class=\"point ${data.options.type}-point\"></div>`);\n\n    container.append(this.endpointDom);\n\n    return container[0];\n  }\n}\n\nexport default Input;\n"
  },
  {
    "filename": "node_semiconductor.js",
    "code": "/* eslint-disable camelcase */\nimport {Node} from 'butterfly-dag';\nimport $ from 'jquery';\nclass Semiconductor extends Node {\n  constructor(opts) {\n    super(opts);\n    // 自定义变量\n    this.endpointDom = null;\n\n    this.images = {\n      semiconductor_1: 'https://img.alicdn.com/tfs/TB1EQHifrr1gK0jSZFDXXb9yVXa-280-150.png',\n      semiconductor_2: 'https://img.alicdn.com/tfs/TB1ESbgfpT7gK0jSZFpXXaTkpXa-313-150.png',\n      semiconductor_3: 'https://img.alicdn.com/tfs/TB1izDhfEY1gK0jSZFMXXaWcVXa-273-150.png',\n      semiconductor_4: 'https://img.alicdn.com/tfs/TB1I3befqL7gK0jSZFBXXXZZpXa-309-150.png',\n      semiconductor_5: 'https://img.alicdn.com/tfs/TB1hr_hfq67gK0jSZFHXXa9jVXa-311-150.png',\n      semiconductor_6: 'https://img.alicdn.com/tfs/TB1KinlfpP7gK0jSZFjXXc5aXXa-304-150.png',\n      semiconductor_7: 'https://img.alicdn.com/tfs/TB1CXPkfAL0gK0jSZFtXXXQCXXa-306-150.png',\n      semiconductor_8: 'https://img.alicdn.com/tfs/TB1ek6ofuH2gK0jSZJnXXaT1FXa-313-150.png'\n    };\n  }\n\n  mounted() {\n    // 设置右侧锚点\n    this.addEndpoint({\n      id: '0',\n      type: 'source',\n      dom: this.outputPointDom,\n      orientation: [1, 0]\n    });\n    // 设置左侧锚点\n    this.inputPointDoms.forEach((point, index) => {\n      this.addEndpoint({\n        id: (index + 1).toString(),\n        type: 'target',\n        dom: point,\n        orientation: [-1, 0]\n      });\n    });\n  }\n\n  draw = (data) => {\n    let container = $('<div class=\"diodes-base-node\"></div>')\n      .css('top', data.top)\n      .css('left', data.left)\n      .attr('id', data.id);\n\n    if (this.options.type) {\n      container.append(`<img src=\"${this.images[this.options.type]}\">`);\n    }\n\n    this.outputPointDom = $('<div class=\"point output-point-0\"></div>');\n    container.append(this.outputPointDom);\n\n    this.inputPointDoms = [];\n    switch (this.options.type) {\n      case 'semiconductor_1':\n      case 'semiconductor_3':\n        this.inputPointDoms.push($('<div class=\"point input-point-0\"></div>'));\n        break;\n      case 'semiconductor_2':\n      case 'semiconductor_4':\n      case 'semiconductor_5':\n      case 'semiconductor_6':\n      case 'semiconductor_7':\n      case 'semiconductor_8':\n        this.inputPointDoms.push($('<div class=\"point input-point-1\"></div>'));\n        this.inputPointDoms.push($('<div class=\"point input-point-2\"></div>'));\n        break;\n    }\n    this.inputPointDoms.forEach((_inputEndpoint) => {\n      container.append(_inputEndpoint);\n    });\n\n    return container[0];\n  }\n}\n\nexport default Semiconductor;\n"
  },
  {
    "filename": "package.json",
    "code": "{\n  \"name\": \"diodes\",\n  \"cn_name\": \"二极管模拟\",\n  \"description\": \"dag to mock diodes\",\n  \"cn_description\": \"一个模拟二极管电路的DAG图\",\n  \"dependencies\": {\n    \"butterfly-dag\": \"*\",\n    \"react\": \"^16.0.0\",\n    \"react-dom\": \"^16.0.0\",\n    \"jquery\": \"*\",\n    \"lodash\": \"*\"\n  }\n}"
  },
  {
    "filename": "theme.less",
    "code": "@butterfly-theme-color-base:#fff;\n@butterfly-normal-font-color-base:#222;;\n@butterfly-overlay-font-color-base:#FFF;\n@butterfly-primary-color-base:#F66902;\n@butterfly-box-border-color-base: #D9D9D9;\n@butterfly-box-shadow-base:0 2px 3px 0 rgba(0,112,204,0.06);\n@butterfly-box-radius-base:100px;\n@butterfly-line-color-base: #BFBFBF;\n// 主题背景色（画布背景色）\n@butterfly-theme-background-color: @butterfly-theme-color-base;\n// （各图形框）普通情况背景色\n@butterfly-theme-color: fade(@butterfly-theme-color-base,80%);\n// 主题色\n@butterfly-primary-color: @butterfly-primary-color-base;\n// 普通情况下字体颜色\n@butterfly-normal-font-color: @butterfly-normal-font-color-base;\n// 主题背景色上的字体颜色及icon颜色\n@butterfly-overlay-font-color: @butterfly-overlay-font-color-base;\n// 拖动时的背景色\n@butterfly-box-move-background-color: fade(@butterfly-primary-color, 20%);\n// 边框的样式\n@butterfly-box-border: 1px solid @butterfly-box-border-color-base;\n@butterfly-box-shadow: @butterfly-box-shadow-base;\n@butterfly-box-radius: @butterfly-box-radius-base;\n@butterfly-box-node-border-hover: 1px solid @butterfly-primary-color;\n// 线条样式\n@butterfly-line-color: @butterfly-line-color-base;"
  }
]