[
  {
    "filename": "data.js",
    "code": "import Node from './node';\nimport Edge from './edge';\nimport BaseGroup from './group';\nimport BaseEndpoint from './endpoint';\n\n\nconst data = {\n  nodes: [{\n    id: '0',\n    top: 100,\n    left: 100,\n    width: 70,\n    height: 30,\n    text: 'A + B',\n    Class: Node,\n    endpoints: [{\n      id: 'right',\n      orientation: [1, 0],\n      pos: [0, 0.5],\n      color: 'system-green',\n      Class: BaseEndpoint\n    }]\n  }, {\n    id: '1',\n    top: 100,\n    left: 250,\n    height: 90,\n    width: 140,\n    text: 'A + B + C',\n    Class: Node,\n    endpoints: [{\n      id: 'left_2',\n      orientation: [-1, 0],\n      pos: [0, 0.55],\n      color: 'system-green',\n      Class: BaseEndpoint\n    }, {\n      id: 'left_3',\n      orientation: [-1, 0],\n      pos: [0, 0.8],\n      color: 'system-green',\n      Class: BaseEndpoint\n    }, {\n      id: 'right_1',\n      orientation: [1, 0],\n      pos: [0, 0.7],\n      color: 'system-green',\n      Class: BaseEndpoint\n    }]\n  }, {\n    id: 'knob',\n    top: 200,\n    left: 100,\n    height: 100,\n    width: 70,\n    text: 'Knob',\n    Class: Node,\n    endpoints: [{\n      id: 'knbo_1',\n      orientation: [1, 0],\n      pos: [0, 0.5],\n      color: 'system-green',\n      Class: BaseEndpoint\n    }]\n  }, {\n    id: 'gamepad',\n    top: 216,\n    left: 250,\n    height: 100,\n    width: 200,\n    endPointLabel: [{\n      endpoint: 'greenDom_0',\n      label: 'left_x_axis',\n    }, {\n      endpoint: 'grayDom_1',\n      label: 'left_y_axis',\n    }, {\n      endpoint: 'grayDom_2',\n      label: 'button_pressed'\n    }],\n    text: 'Gamepad',\n    Class: Node,\n  }, {\n    id: 'testGroup1',\n    top: 36,\n    left: 341,\n    height: 70,\n    width: 100,\n    text: 'Flat Slots1',\n    group: 'testGroup',\n    Class: Node,\n    endpoints: [{\n      id: 'testGroup1_01',\n      orientation: [0, -1],\n      pos: [0.5, 0],\n      color: 'system-green',\n      Class: BaseEndpoint // 绿色系统锚点\n    }, {\n      id: 'testGroup1_02',\n      orientation: [0, 1],\n      pos: [0.33, 0],\n      color: 'system-green',\n      Class: BaseEndpoint // 绿色系统锚点\n    }, {\n      id: 'testGroup1_03',\n      orientation: [0, 1],\n      pos: [0.66, 0],\n      color: 'system-green',\n      Class: BaseEndpoint // 绿色系统锚点\n    }]\n  }, {\n    id: 'testGroup2',\n    top: 128,\n    left: 237,\n    height: 70,\n    width: 100,\n    text: 'Flat Slots2',\n    group: 'testGroup',\n    Class: Node,\n    endpoints: [{\n      id: 'testGroup2_01',\n      orientation: [0, -1],\n      pos: [0.5, 0],\n      color: 'system-green',\n      Class: BaseEndpoint // 绿色系统锚点\n    }, {\n      id: 'testGroup2_02',\n      orientation: [0, 1],\n      pos: [0.33, 0],\n      color: 'system-gray',\n      Class: BaseEndpoint // 灰色系统锚点\n    }, {\n      id: 'testGroup2_03',\n      orientation: [0, 1],\n      pos: [0.66, 0],\n      color: 'system-gray',\n      Class: BaseEndpoint // 灰色系统锚点\n    }]\n  }, {\n    id: 'testGroup3',\n    top: 128,\n    left: 420,\n    height: 70,\n    width: 100,\n    text: 'Flat Slots3',\n    group: 'testGroup',\n    Class: Node,\n    endpoints: [{\n      id: 'testGroup3_01',\n      orientation: [0, -1],\n      pos: [0.5, 0],\n      color: 'system-green',\n      Class: BaseEndpoint // 绿色系统锚点\n    }, {\n      id: 'testGroup3_02',\n      orientation: [0, 1],\n      pos: [0.33, 0],\n      color: 'system-gray',\n      Class: BaseEndpoint // 灰色系统锚点\n    }, {\n      id: 'testGroup3_03',\n      orientation: [0, 1],\n      pos: [0.66, 0],\n      color: 'system-gray',\n      Class: BaseEndpoint // 灰色系统锚点\n    }]\n  }, {\n    id: 'widgest',\n    top: 40,\n    left: 24,\n    width: 150,\n    height: 170,\n    text: 'Widgest',\n    group: 'testGroup',\n    Class: Node,\n  }, {\n    id: 'logEvent',\n    top: 226,\n    left: 608,\n    height: 80,\n    width: 140,\n    text: 'Log Event',\n    Class: Node,\n  }, {\n    id: 'customShapes',\n    top: 111,\n    left: 568,\n    height: 60,\n    width: 140,\n    text: 'Custom Shapes',\n    Class: Node,\n    endpoints: [{\n      id: 'custom_01',\n      orientation: [-1, 0],\n      pos: [0, 0.8],\n      color: 'system-green',\n      Class: BaseEndpoint\n    }]\n  }],\n  groups: [{\n    id: 'testGroup',\n    options: {\n      text: 'Group'\n    },\n    top: 360,\n    left: 100,\n    Class: BaseGroup\n  }],\n  edges: [{\n    source: 'right',\n    target: 'left_2',\n    sourceNode: '0',\n    targetNode: '1',\n    type: 'endpoint',\n    Class: Edge\n  }, {\n    source: 'knbo_1',\n    target: 'left_3',\n    sourceNode: 'knob',\n    targetNode: '1',\n    type: 'endpoint',\n    Class: Edge\n  }, {\n    source: 'testGroup3_01',\n    target: 'testGroup1_03',\n    sourceNode: 'testGroup3',\n    targetNode: 'testGroup1',\n    type: 'endpoint',\n    Class: Edge\n  }, {\n    source: 'testGroup2_01',\n    target: 'testGroup1_02',\n    sourceNode: 'testGroup2',\n    targetNode: 'testGroup1',\n    type: 'endpoint',\n    Class: Edge\n  }, {\n    source: 'widgest_1',\n    target: 'testGroup1_01',\n    sourceNode: 'widgest',\n    targetNode: 'testGroup1',\n    type: 'endpoint',\n    Class: Edge\n  }, {\n    source: 'gamepad_1',\n    target: 'log_event_01',\n    sourceNode: 'gamepad',\n    targetNode: 'logEvent',\n    type: 'endpoint',\n    Class: Edge\n  }, {\n    source: 'right_1',\n    target: 'custom_01',\n    sourceNode: '1',\n    targetNode: 'customShapes',\n    type: 'endpoint',\n    Class: Edge\n  }]\n};\n\nexport default data;\n"
  },
  {
    "filename": "edge.js",
    "code": "import {Edge} from 'butterfly-dag';\nimport $ from 'jquery';\n\nclass BaseEdge extends Edge {\n  draw(obj) {\n    let path = super.draw(obj);\n    $(path).addClass('test-base-link');\n    return path;\n  }\n  drawLabel(texts) {\n  }\n}\n\nexport default BaseEdge;\n"
  },
  {
    "filename": "endpoint.js",
    "code": "import {Endpoint} from 'butterfly-dag';\nimport $ from 'jquery';\n\nclass BaseEndpoint extends Endpoint {\n  draw(obj) {\n    let point = super.draw(obj);\n    if (obj.options && obj.options.color === 'system-gray') {\n      // 系统灰色锚点\n      $(point).addClass('system-gray-point');\n    } else if (obj.options && obj.options.color === 'system-green') {\n      // 系统锚点绿色\n      $(point).addClass('system-green-point');\n    }\n    return point;\n  }\n}\n\nexport default BaseEndpoint;\n"
  },
  {
    "filename": "group.js",
    "code": "import {Group} from 'butterfly-dag';\nimport $ from 'jquery';\nimport _ from 'lodash';\n\nclass BaseGroup extends Group {\n  draw(obj) {\n    let _dom = obj.dom;\n    if (!_dom) {\n      _dom = $('<div></div>')\n        .attr('class', 'test_group')\n        .css('top', obj.top)\n        .css('left', obj.left)\n        .attr('id', obj.id);\n    }\n    let group = $(_dom);\n    this._container = $('<div></div>')\n      .attr('class', 'test_container');\n\n    group.append(this._container);\n\n    // 添加文字\n    if (_.get(obj, 'options.text')) {\n      group.append(`<span class=\"text\">${obj.options.text}</span>`);\n    }\n\n    return _dom;\n  }\n  getWidth() {\n    return $(this.dom).width();\n  }\n  getHeight() {\n    return $(this.dom).height();\n  }\n}\n\nexport default BaseGroup;\n"
  },
  {
    "filename": "index.jsx",
    "code": "import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {Canvas} from 'butterfly-dag';\nimport mockData from './data.js';\n\nimport 'butterfly-dag/dist/index.css';\nimport './index.less';\nclass LiteGraph extends Component {\n  constructor() {\n    super();\n  }\n  componentDidMount() {\n    let root = document.getElementById('dag-canvas');\n    this.canvas = new Canvas({\n      root: root,\n      disLinkable: true, // 可删除连线\n      linkable: true,    // 可连线\n      draggable: true,   // 可拖动\n      zoomable: true,    // 可放大\n      moveable: true,    // 可平移\n      theme: {\n        edge: {\n          shapeType: 'AdvancedBezier'\n        }\n      }\n    });\n    this.canvas.draw(mockData, () => {\n      this.canvas.setGridMode(true, {\n        isAdsorb: false,         // 是否自动吸附,默认关闭\n        theme: {\n          shapeType: 'circle',     // 展示的类型，支持line & circle\n          gap: 20,               // 网格间隙\n          background: 'rgba(0, 0, 0, 0.65)',     // 网格背景颜色\n          circleRadiu: 1.5,        // 圆点半径\n          circleColor: 'rgba(255, 255, 255, 0.8)'    // 圆点颜色\n        }\n      });\n    });\n  }\n  render() {\n    return (\n      <div className='litegraph-page'>\n        <div className='litegraph-canvas' id='dag-canvas'></div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<LiteGraph />, document.getElementById('root'));\n"
  },
  {
    "filename": "index.less",
    "code": "@import 'theme.less'; \n.litegraph-page{\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background: #090a0a;\n  .litegraph-canvas{\n    width: 100%;\n    height: 100%;\n    .test_group{\n      width: 550px;\n      height: 240px;\n      position: absolute;\n      .test_container{\n        width: 100%;\n        height: 100%;\n        border-radius: 5px;\n        border: 2px solid #57bdb4;\n        background: #4c5f82;\n        opacity: 0.3;\n      }\n    }\n    .test_group {\n      > .text {\n        position: absolute;\n        top: 3px;\n        left: 18px;\n        font-size: 20px;\n        color: #16c7da;\n      }\n    }\n    .test-base-link{\n      stroke: #4b4f6b;\n      stroke-width: 3px;\n      &.active {\n        stroke-width: 3px;\n        stroke: #ff8637;\n      }\n    }\n    .test-base-node{\n      height: 32px;\n      width: 102px;\n      line-height: 28px;\n      text-align: center;\n      background: #fff;\n      vertical-align: middle;\n      border-radius: 5px;\n      position: absolute;\n      background: #3c3a3a;\n      text-align: center;\n      color: #bfbfbf;\n      &.active {\n        border: 2px solid #ff8637;\n        box-shadow: 0 2px 12px 0 rgba(0,0,0,.8);\n      }\n      .text{\n        display: inline-block;\n        width: 100%;\n        height: 30px;\n        vertical-align: middle;\n        border-bottom:1px solid #000000;\n      }\n      .custom-gray-point{\n        position: absolute;\n        width: 12px;\n        height: 12px;\n        border-radius: 50%;\n        border: 1px solid #000000;\n        background: #828f9c;\n        &.game-point_2{\n          right: 4px;\n          top: calc(~ \"68% - 10px\");\n        }\n        &.game-point_3 {\n          right: 4px;\n          top: calc(~ \"50% - 6px\");\n        }\n      }\n      .custom-green-rectangle-point{\n        position: absolute;\n        width: 15px;\n        height: 10px;\n        background: #55ea55;\n        &.game-point_1{\n          right: 4px;\n          top: calc(~ \"87% - 15px\");\n        }\n        &.log-event-point_1{\n          top: calc(~ \"87% - 10px\");\n          left: 4px;\n        }\n      }\n      .custom-green-circle-point {\n        position: absolute;\n        width: 10px;\n        height: 10px;\n        border-radius: 50%;\n        background: #55ea55;\n        &.widgest-point_1{\n          right: 6px;\n          top: calc(~ \"35% - 5px\");\n        }\n      }\n      .endpointInfo{\n        position: absolute;\n        width: 100%;\n        top: 30px;\n        height: 28px;\n        .label_span{\n          position: absolute;\n          right: 28px;\n        }\n        &.endpoint1{\n          top: calc(~ \"50% - 25px\");\n        }\n        &.endpoint2{\n          top: calc(~ \"60% - 10px\");\n        }\n        &.endpoint3{\n          top: calc(~ \"83% - 10px\");\n        }\n      }\n    }\n    .system-green-point{\n      background: #55ea55;\n      width: 10px;\n      height: 10px;\n      &.active {\n        background: #ff8637;\n        border: 1px solid #ff8637;\n      }\n    }\n    .system-gray-point{\n      width: 12px;\n      height: 12px;\n      background: #828f9c;\n      border: 1px solid #000000;\n    }\n  }\n}"
  },
  {
    "filename": "node.js",
    "code": "import {Node} from 'butterfly-dag';\nimport $ from 'jquery';\n\nclass BaseNode extends Node {\n  constructor(opts) {\n    super(opts);\n    this.titleBox = null;\n  }\n  mounted() {\n    if (this.grayDom_3) {\n      this.addEndpoint({\n        id: 'gamepad_0',\n        dom: this.grayDom_3,\n      });\n    }\n    if (this.greenDom_1) {\n      this.addEndpoint({\n        id: 'gamepad_1',\n        dom: this.greenDom_1\n      });\n    }\n    if (this.grayDom_2) {\n      this.addEndpoint({\n        id: 'gamepad_2',\n        dom: this.grayDom_2\n      });\n    }\n    if (this.logEventDom) {\n      this.addEndpoint({\n        id: 'log_event_01',\n        dom: this.logEventDom,\n      });\n    }\n    if (this.widEndpointDom) {\n      this.addEndpoint({\n        id: 'widgest_1',\n        orientation: [1, 0],\n        dom: this.widEndpointDom,\n      });\n    }\n  }\n  draw = (data) => {\n    let container = $('<div class= \"test-base-node\"></div>')\n      .css('top', data.top)\n      .css('left', data.left)\n      .css('width', data.options.width)\n      .css('height', data.options.height)\n      .attr('id', data.id);\n    switch (this.options.id) {\n      case 'gamepad' :\n        this.greenDom_1 = ($('<div class=\"custom-green-rectangle-point game-point_1\"></div>'));\n        this.grayDom_2 = ($('<div class=\"custom-gray-point game-point_2\"></div>'));\n        this.grayDom_3 = $('<div class=\"custom-gray-point game-point_3\"></div>');\n        break;\n      case 'logEvent':\n        this.logEventDom = $('<div class=\"custom-green-rectangle-point log-event-point_1\"></div>');\n        break;\n      case 'widgest':\n        this.widEndpointDom = $(`<div class=\"custom-green-circle-point widgest-point_1\"></div>`);\n        break;\n      default:\n    }\n\n    if (data.options.endPointLabel) {\n      let endpoint1 = $('<div class=\"endpointInfo endpoint1\"></div>');\n      let endpoint2 = $('<div class=\"endpointInfo endpoint2\"></div>');\n      let endpoint3 = $('<div class=\"endpointInfo endpoint3\"></div>');\n      data.options.endPointLabel.forEach(item => {\n        if (item.endpoint === 'greenDom_0') {\n          endpoint1.append(`<span class=\"label_span\">${item.label}</span>`);\n          endpoint1.append(this.greenDom_1);\n        } else if (item.endpoint === 'grayDom_1') {\n          endpoint2.append(`<span class=\"label_span\">${item.label}</span>`);\n          endpoint2.append(this.grayDom_2);\n        } else if (item.endpoint === 'grayDom_2') {\n          endpoint3.append(`<span class=\"label_span\">${item.label}</span>`);\n          endpoint3.append(this.grayDom_3);\n        }\n      });\n      container.append(endpoint1);\n      container.append(endpoint2);\n      container.append(endpoint3);\n    }\n\n    if (this.logEventDom) {\n      container.append(this.logEventDom);\n    }\n\n    if (this.widEndpointDom) {\n      container.append(this.widEndpointDom);\n    }\n\n    container.append(`<span class='text'>${data.options.text}</span>`);\n    return container[0];\n  }\n}\nexport default BaseNode;\n"
  },
  {
    "filename": "package.json",
    "code": "{\n  \"name\": \"lite_graph\",\n  \"cn_name\": \"网格背景模板\",\n  \"description\": \"a dag to show to how to use grid layout and custom anchors\",\n  \"cn_description\": \"网格背景模板、自定义锚点\",\n  \"dependencies\": {\n    \"butterfly-dag\": \"*\",\n    \"react\": \"^16.0.0\",\n    \"react-dom\": \"^16.0.0\",\n    \"jquery\": \"*\",\n    \"lodash\": \"*\"\n  }\n}"
  },
  {
    "filename": "theme.less",
    "code": "@butterfly-theme-color-base:#fff;\n@butterfly-normal-font-color-base:#222;;\n@butterfly-overlay-font-color-base:#FFF;\n@butterfly-primary-color-base:#F66902;\n@butterfly-box-border-color-base: #D9D9D9;\n@butterfly-box-shadow-base:0 2px 3px 0 rgba(0,112,204,0.06);\n@butterfly-box-radius-base:100px;\n@butterfly-line-color-base: #BFBFBF;\n// 主题背景色（画布背景色）\n@butterfly-theme-background-color: @butterfly-theme-color-base;\n// （各图形框）普通情况背景色\n@butterfly-theme-color: fade(@butterfly-theme-color-base,80%);\n// 主题色\n@butterfly-primary-color: @butterfly-primary-color-base;\n// 普通情况下字体颜色\n@butterfly-normal-font-color: @butterfly-normal-font-color-base;\n// 主题背景色上的字体颜色及icon颜色\n@butterfly-overlay-font-color: @butterfly-overlay-font-color-base;\n// 拖动时的背景色\n@butterfly-box-move-background-color: fade(@butterfly-primary-color, 20%);\n// 边框的样式\n@butterfly-box-border: 1px solid @butterfly-box-border-color-base;\n@butterfly-box-shadow: @butterfly-box-shadow-base;\n@butterfly-box-radius: @butterfly-box-radius-base;\n@butterfly-box-node-border-hover: 1px solid @butterfly-primary-color;\n// 线条样式\n@butterfly-line-color: @butterfly-line-color-base;"
  }
]