[
  {
    "filename": "centerNode.js",
    "code": "import $ from 'jquery';\nimport {Node} from 'butterfly-dag';\n\nimport './node.less';\nclass CenterNode extends Node {\n  constructor(opts) {\n    super(opts);\n    this.options = opts;\n  }\n\n  draw = (opts) => {\n    let container = $('<div class=\"decision-node\"></div>')\n      .attr('id', opts.id)\n      .css('top', opts.top + 'px')\n      .css('left', opts.left + 'px');\n\n    this._createLeft(container);\n    this._createText(container);\n    this._createRight(container);\n    return container[0];\n  }\n\n  _createText(dom = this.dom) {\n    $('<span class=\"text-box\"></span>').text(this.options.text).appendTo(dom);\n  }\n\n  _createLeft(dom = this.dom) {\n    let arrowLeft = $('<span class=\"arrow-left\"></span>').appendTo(dom);\n    arrowLeft.on('click', (event) => {\n      this.emit('clickArrowLeft', event.currentTarget);\n    });\n    return arrowLeft;\n  }\n\n  _createRight(dom = this.dom) {\n    let arrowRight = $('<span class=\"arrow-right\"></span>').appendTo(dom);\n    arrowRight.on('click', (event) => {\n      this.emit('clickArrowRight', event.currentTarget);\n    });\n    return arrowRight;\n  }\n}\n\nexport default CenterNode;\n"
  },
  {
    "filename": "centerNode.less",
    "code": "@import 'theme.less'; \n"
  },
  {
    "filename": "circleCanvas.js",
    "code": "import $ from 'jquery';\nimport _ from 'lodash';\nimport {Canvas} from 'butterfly-dag';\n\nimport Group from './group';\nimport NoteSourceNode from './noteSourceNode';\nimport NoteTargetNode from './noteTargetNode';\n\nclass CircleCanvas extends Canvas {\n  draw(opts, callback) {\n    let _groups = opts.groups;\n    opts.groups = [];\n    opts.nodes = _.sortBy(opts.nodes, (o) => {\n      return o._group;\n    });\n    super.draw(opts, () => {\n      this.addCircleGroups(_groups);\n      this.addNotes(opts.notes);\n      callback && callback();\n      opts.groups = _groups;\n      // 环绕节点组的一圈环\n      this._drawCirlce();\n    });\n  }\n\n  _drawCirlce() {\n    let circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n    circle.setAttribute('class', 'orange-circle');\n    circle.setAttribute('cx', '0');\n    circle.setAttribute('cy', '7');\n    circle.setAttribute('r', '200');\n    $(this.svg).append(circle);\n  }\n\n  addCircleGroups(groups) {\n    groups.forEach((obj) => {\n      let nodes = this.nodes.filter((item) => {\n        return item.options._group === obj.id;\n      });\n      // 查找扇形弧度\n      let minAngle = Infinity;\n      let maxAngle = -Infinity;\n      nodes.forEach((item) => {\n        if (item.options.posInfo.angle < minAngle) {\n          minAngle = item.options.posInfo.angle;\n        }\n        if (item.options.posInfo.angle > maxAngle) {\n          maxAngle = item.options.posInfo.angle;\n        }\n      });\n\n      minAngle = minAngle - 5;\n      maxAngle = maxAngle + 5;\n      // 记录扇形的直径\n      obj.posInfo = {\n        innerRadius: 200,\n        outterRadius: 350,\n        outter2Radius: 360,\n        minAngle: minAngle,\n        maxAngle: maxAngle\n      };\n      obj.Class = Group;\n\n      // 计算扇形的路径\n      function _calcRadius(_obj, key, radius) {\n        let radian = (2 * Math.PI) / 360;\n        // 开始坐标\n        let _top1 = parseInt(radius * Math.sin(_obj.posInfo.minAngle * radian), 10);\n        let _left1 = parseInt(radius * Math.cos(_obj.posInfo.minAngle * radian), 10);\n        // 结束坐标\n        let _top2 = parseInt(radius * Math.sin(_obj.posInfo.maxAngle * radian), 10);\n        let _left2 = parseInt(radius * Math.cos(_obj.posInfo.maxAngle * radian), 10);\n        // 中间坐标\n        let _top3 = parseInt(radius * Math.sin((_obj.posInfo.minAngle + _obj.posInfo.maxAngle) / 2 * radian), 10);\n        let _left3 = parseInt(radius * Math.cos((_obj.posInfo.minAngle + _obj.posInfo.maxAngle) / 2 * radian), 10);\n        _obj.posInfo[key] = [_left1, _top1, _left2, _top2, _left3, _top3];\n      }\n\n      _calcRadius(obj, 'innerPos', obj.posInfo.innerRadius);\n      _calcRadius(obj, 'outterPos', obj.posInfo.outterRadius);\n      _calcRadius(obj, 'outter2Pos', obj.posInfo.outter2Radius);\n    });\n    this.addGroups(groups);\n  }\n\n  addNotes(notes) {\n    notes.forEach((note, index) => {\n      let group = this.getGroup(note._group);\n      const leftSideX = -500;\n      const rightSideX = 500;\n      this.addNodes([{\n        id: `note-source-${index}`,\n        top: group.options.posInfo.outter2Pos[5],\n        left: group.options.posInfo.outter2Pos[4],\n        Class: NoteSourceNode,\n        _group: group\n      }, {\n        id: `note-target-${index}`,\n        top: group.options.posInfo.outterPos[5],\n        left: group.options.posInfo.outterPos[4] > 0 ? rightSideX : leftSideX,\n        side: group.options.posInfo.outterPos[4] > 0 ? 'right' : 'left',\n        Class: NoteTargetNode,\n        text: note.text\n      }]);\n\n      this.addEdge({\n        id: `note-${index}`,\n        source: `note-source-${index}`,\n        target: `note-target-${index}`\n      });\n    });\n  }\n}\n\nexport default CircleCanvas;\n"
  },
  {
    "filename": "data.js",
    "code": "import Node from './node';\nimport Edge from './edge';\nimport CenterNode from './centerNode';\n\nexport default {\n  nodes: [\n    {\n      id: 0,\n      text: '测试0',\n      Class: Node,\n      _group: 'group_0',\n      _isCircle: true,\n    },\n    {\n      id: 1,\n      text: '测试1',\n      Class: Node,\n      _group: 'group_0',\n      _isCircle: true\n    },\n    {\n      id: 3,\n      text: '测试2',\n      Class: Node,\n      _group: 'group_0',\n      _isCircle: true\n    },\n    {\n      id: 4,\n      text: '测试3',\n      Class: Node,\n      _group: 'group_0',\n      _isCircle: true\n    },\n    {\n      id: 5,\n      text: '测试4',\n      Class: Node,\n      _group: 'group_1',\n      _isCircle: true\n    },\n    {\n      id: 6,\n      text: '测试5',\n      Class: Node,\n      _group: 'group_1',\n      _isCircle: true\n    },\n    {\n      id: 7,\n      text: '测试6',\n      Class: Node,\n      _group: 'group_1',\n      _isCircle: true\n    },\n    {\n      id: 8,\n      text: '测试7',\n      Class: Node,\n      _group: 'group_2',\n      _isCircle: true\n    },\n    {\n      id: 9,\n      text: '测试8',\n      Class: Node,\n      _group: 'group_3',\n      _isCircle: true\n    },\n    {\n      id: 10,\n      text: '测试9',\n      Class: Node,\n      _group: 'group_3',\n      _isCircle: true\n    },\n    {\n      id: 11,\n      text: '测试10',\n      Class: Node,\n      _group: 'group_3',\n      _isCircle: true\n    },\n    {\n      id: 12,\n      text: '测试11',\n      Class: Node,\n      _group: 'group_3',\n      _isCircle: true\n    },\n    {\n      id: 13,\n      text: '测试12',\n      Class: Node,\n      _group: 'group_4',\n      _isCircle: true\n    },\n    {\n      id: 14,\n      text: '测试13',\n      Class: Node,\n      _group: 'group_4',\n      _isCircle: true\n    },\n    {\n      id: 15,\n      text: '测试14',\n      Class: Node,\n      _group: 'group_4',\n      _isCircle: true\n    },\n    {\n      id: 16,\n      text: '测试15',\n      Class: Node,\n      _group: 'group_4',\n      _isCircle: true\n    },\n    {\n      id: 17,\n      text: '测试16',\n      Class: Node,\n      _group: 'group_4',\n      _isCircle: true\n    },\n    {\n      id: 18,\n      text: '测试17',\n      Class: Node,\n      _group: 'group_5',\n      _isCircle: true\n    },\n    {\n      id: 19,\n      text: '测试18',\n      Class: Node,\n      _group: 'group_5',\n      _isCircle: true\n    },\n    {\n      id: 20,\n      text: '测试19',\n      Class: Node,\n      _group: 'group_5',\n      _isCircle: true\n    },\n    {\n      id: 21,\n      text: '测试20',\n      Class: Node,\n      _group: 'group_5',\n      _isCircle: true\n    },\n    {\n      id: 22,\n      text: '测试21',\n      Class: Node,\n      _group: 'group_5',\n      _isCircle: true\n    },\n    {\n      id: 23,\n      text: '测试22',\n      Class: Node,\n      _group: 'group_5',\n      _isCircle: true\n    },\n    {\n      id: 24,\n      text: '测试23',\n      Class: Node,\n      _group: 'group_5',\n      _isCircle: true\n    },\n    {\n      id: 25,\n      text: '测试24',\n      Class: Node,\n      _group: 'group_5',\n      _isCircle: true\n    },\n    {\n      id: 'centerNode',\n      text: '城市出行',\n      top: -18,\n      left: -58,\n      Class: CenterNode\n    }\n  ],\n  groups: [\n    {\n      id: 'group_0',\n      color: '#9043B2'\n    },\n    {\n      id: 'group_1',\n      color: '#0034D8'\n    },\n    {\n      id: 'group_2',\n      color: '#0BABC2'\n    },\n    {\n      id: 'group_3',\n      color: '#71D6C3'\n    },\n    {\n      id: 'group_4',\n      color: '#EF5229'\n    },\n    {\n      id: 'group_5',\n      color: '#B0BE22'\n    }\n  ],\n  edges: [\n    {\n      id: 1,\n      source: 'centerNode',\n      target: 11,\n      Class: Edge\n    },\n    {\n      id: 2,\n      source: 'centerNode',\n      target: 1,\n      Class: Edge\n    }\n  ],\n  notes: [\n    {\n      id: 0,\n      _group: 'group_0',\n      text: '这是group0的注释'\n    },\n    {\n      id: 1,\n      _group: 'group_1',\n      text: '这是group1的注释'\n    },\n    {\n      id: 2,\n      _group: 'group_2',\n      text: '这是group2的注释'\n    },\n    {\n      id: 3,\n      _group: 'group_3',\n      text: '这是group3的注释'\n    },\n    {\n      id: 4,\n      _group: 'group_4',\n      text: '这是group4的注释'\n    },\n    {\n      id: 5,\n      _group: 'group_5',\n      text: '这是group5的注释'\n    }\n  ]\n};\n"
  },
  {
    "filename": "edge.js",
    "code": "import $ from 'jquery';\nimport {Edge} from 'butterfly-dag';\n\nimport './edge.less';\n\nclass BaseEdge extends Edge {\n  draw(obj) {\n    let path = super.draw(obj);\n    $(path).addClass('orange-dash-path');\n    return path;\n  }\n}\n\nexport default BaseEdge;\n"
  },
  {
    "filename": "edge.less",
    "code": "@import 'theme.less'; \n.circle-page {\n  .butterflies-link {\n    fill: none;\n    stroke: #cecece;\n    stroke-width: 1px;\n    stroke-dasharray: 5, 5;\n  }\n  .orange-dash-path {\n    stroke: #f7c64c;\n    stroke-width: 1px;\n    stroke-dasharray: 5, 5;\n  }\n}"
  },
  {
    "filename": "group.js",
    "code": "import {Group} from 'butterfly-dag';\nimport $ from 'jquery';\n\nimport './group.less';\nclass BaseGroup extends Group {\n  constructor(opts) {\n    super(opts);\n    this.options = opts;\n    this.titlePath = undefined;\n  }\n  draw = (opts) => {\n    // 坐标需要计算\n    let container = $('<div class=\"annulus-group\"></div>')\n      .attr('id', opts.id)\n      .css('top', opts.top + 'px')\n      .css('left', opts.left + 'px');\n\n    let svg = $(`<svg class=\"group-svg\"></svg>`);\n\n    let titlePathData = [\n      'M', opts.options.posInfo.outterPos[0], opts.options.posInfo.outterPos[1],\n      'A', opts.options.posInfo.outterRadius, opts.options.posInfo.outterRadius, 0, 0, 1, opts.options.posInfo.outterPos[2], opts.options.posInfo.outterPos[3],\n      'L', opts.options.posInfo.outter2Pos[2], opts.options.posInfo.outter2Pos[3],\n      'A', opts.options.posInfo.outter2Radius, opts.options.posInfo.outter2Radius, 0, 0, 0, opts.options.posInfo.outter2Pos[0], opts.options.posInfo.outter2Pos[1],\n    ];\n\n    let titlePath = $(document.createElementNS('http://www.w3.org/2000/svg', 'path'))\n      .attr('d', titlePathData.join(' '))\n      .css('fill', opts.options.color)\n      .addClass('group-title-path');\n\n\n    let containerPathData = [\n      'M', opts.options.posInfo.outter2Pos[0], opts.options.posInfo.outter2Pos[1],\n      'A', opts.options.posInfo.outter2Radius, opts.options.posInfo.outter2Radius, 0, 0, 1, opts.options.posInfo.outter2Pos[2], opts.options.posInfo.outter2Pos[3],\n      'L', opts.options.posInfo.innerPos[2], opts.options.posInfo.innerPos[3],\n      'A', opts.options.posInfo.innerRadius, opts.options.posInfo.innerRadius, 0, 0, 0, opts.options.posInfo.innerPos[0], opts.options.posInfo.innerPos[1],\n    ];\n\n    let containerPath = $(document.createElementNS('http://www.w3.org/2000/svg', 'path'))\n      .attr('d', containerPathData.join(' '))\n      .addClass('group-container-path');\n\n    this.titlePath = titlePath[0];\n\n    svg.append(containerPath[0]);\n\n    svg.append(titlePath[0]);\n\n\n    container.append(svg);\n    return container[0];\n  }\n}\n\nexport default BaseGroup;\n"
  },
  {
    "filename": "group.less",
    "code": "@import 'theme.less'; \n.annulus-group {\n  position: absolute;\n  width: 200px;\n  height: 200px;\n  .group-svg {\n    width: 1px;\n    height: 1px;\n    position: relative;\n    pointer-events: auto!important;\n    overflow: visible!important;\n    .group-title-path {\n      fill: #000;\n    }\n    .group-container-path {\n      stroke-width: 1px;\n      fill: #f0f0f0;\n    }\n  }\n}\n"
  },
  {
    "filename": "index.jsx",
    "code": "import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Edge from './edge';\nimport mockData from './data.js';\nimport Canvas from './circleCanvas.js';\n\nimport './index.less';\nimport 'butterfly-dag/dist/index.css';\n\nclass Circle extends Component {\n  componentDidMount() {\n    let root = document.getElementById('dag-canvas');\n    this.canvas = new Canvas({\n      root: root,\n      disLinkable: true, // 可删除连线\n      linkable: true,    // 可连线\n      draggable: true,   // 可拖动\n      zoomable: true,    // 可放大\n      moveable: true,    // 可平移\n      layout: {\n        type: 'circleLayout',\n        options: {\n          radius: 100,\n          getWidth: () => {\n            return 15;\n          },\n          getHeight: () => {\n            return 15;\n          },\n\n        },\n      },\n      theme: {\n        edge: {\n          shapeType: 'Straight'\n        }\n      }\n    });\n\n    this.canvas.draw(mockData, () => {\n      this.canvas.focusCenterWithAnimate();\n    });\n    this.canvas.on('system.link.connect', ({links}) => {\n      links.forEach(link => {\n        link.targetNode.active && link.targetNode.active(link.targetNode.dom);\n      });\n    });\n\n    // 节点点击事件\n    this.canvas.on('clickCircleNode', () => {\n      this.canvas.addEdge({\n        id: 3,\n        source: 'centerNode',\n        target: 13,\n        Class: Edge\n      });\n    });\n\n    // 左箭头点击事件\n    this.canvas.on('clickArrowLeft', (event) => {\n      // eslint-disable-next-line no-console\n      console.log(event, 'left');\n    });\n\n    // 右箭头点击事件\n    this.canvas.on('clickArrowRight', (event) => {\n      // eslint-disable-next-line no-console\n      console.log(event, 'right');\n    });\n  }\n  render() {\n    return (\n      <div className='circle-page'>\n        <div className=\"circle-canvas\" id=\"dag-canvas\">\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Circle />, document.getElementById('root'));\n"
  },
  {
    "filename": "index.less",
    "code": "@import 'theme.less'; \n.circle-page{\n  width: 100%;\n  height: 100%;\n  .circle-canvas {\n    width: 100%;\n    height: 100%;\n    background-color: white;\n  }\n  .orange-circle {\n    stroke: #f7c64c;\n    stroke-width: 1px;\n    stroke-dasharray: 5, 5;\n    fill: rgba(0,0,0,0);\n  }\n}"
  },
  {
    "filename": "node.js",
    "code": "import $ from 'jquery';\nimport {Node} from 'butterfly-dag';\n\nimport './node.less';\n\nlet prevNode = null;\nclass BaseNode extends Node {\n  constructor(opts) {\n    super(opts);\n    this.options = opts;\n  }\n\n  draw = (opts) => {\n    let container = $('<div class=\"circle-node\"></div>')\n      .attr('id', opts.id)\n      .css('top', opts.top + 'px')\n      .css('left', opts.left + 'px');\n\n    let _angle = opts.options.posInfo.angle - 90;\n    let _translateX = opts.options.posInfo._textLeft - opts.left;\n    let _translateY = opts.options.posInfo._textTop - opts.top;\n\n    let textDom = $(`<div class=\"circle-node-text\">${opts.options.text}</div>`)\n      .css({\n        transform: `translate(${_translateX}px, ${_translateY}px) rotate(${_angle}deg)`,\n        webkitTransform: `translate(${_translateX}px, ${_translateY}px) rotate(${_angle}deg)`,\n        mozTransform: `translate(${_translateX}px, ${_translateY}px) rotate(${_angle}deg)`,\n        msTransform: `translate(${_translateX}px, ${_translateY}px) rotate(${_angle}deg)`\n      });\n\n    container.append(textDom);\n\n    container.on('click', (event) => {\n      let id = event.currentTarget.id;\n      $('.circle-node-text').removeClass('circle-node-text-border');\n      if (prevNode !== id) {\n        $(textDom).addClass('circle-node-text-border');\n        prevNode = id;\n      } else {\n        prevNode = null;\n      }\n\n      this.emit('clickCircleNode', event.currentTarget);\n    });\n\n    return container[0];\n  }\n\n  active(nodeDom) {\n    $(nodeDom).addClass('circle-node-bg');\n    $(nodeDom).children('.circle-node-text').addClass('circle-node-text-color');\n  }\n}\n\nexport default BaseNode;\n"
  },
  {
    "filename": "node.less",
    "code": "@import 'theme.less'; \n.circle-page {\n  .circle-node {\n    position: absolute;\n    width: 12px;\n    height: 12px;\n    background: #BFBFBF;\n    border-radius: 50%;\n    cursor: pointer;\n    &.circle-node-bg {\n      background: #FA6400;\n      &::before {\n        position: absolute;\n        left: -10px;\n        top: -10px;\n        content: '';\n        width: 32px;\n        height: 32px;\n        background: rgba(247, 180, 0, 0.5);\n        border-radius: 50%;\n      }\n    }\n    .circle-node-text {\n      position: absolute;\n      // transform-origin: 7.5px 7.5px;\n      // -ms-transform-origin: 7.5px 7.5px;\n      // -webkit-transform-origin: 7.5px 7.5px;\n      // -moz-transform-origin: 7.5px 7.5px;\n      // -o-transform-origin: 7.5px 7.5px;\n      transform-origin: 7.5px 7.5px;\n      -ms-transform-origin: 7.5px 7.5px;\n      -webkit-transform-origin: 7.5px 7.5px;\n      -moz-transform-origin: 7.5px 7.5px;\n      -o-transform-origin: 7.5px 7.5px;\n      color: #333;\n      padding: 10px 8px;\n      box-sizing: border-box;\n    }\n    .circle-node-text-border {\n      border: 1px solid #FF6A00;\n      border-radius: 20px;\n      background: rgba(255, 106, 0, 0.15);\n    }\n    .popup-node {\n      position: absolute;\n      width: 339px;\n      height: auto;\n      padding: 14px;\n      background: #FFF;\n      border-left: 6px solid #A4A4A4;\n      z-index: 1;\n      .popup-node-title {\n        font-size: 16px;\n        margin-bottom: 16px;\n        margin-left: 11px;\n        font-style: normal;\n      }\n    }\n    .circle-node-text-color {\n      color: #FA6400;\n    }\n  }\n  .decision-node {\n    padding: 0 10px;\n    background: #FA541C;\n    color: #FFF;\n    min-width: 116px;\n    .text-box {\n      width: 100%;\n    }\n    .arrow-left {\n      position: absolute;\n      left: -36px;\n      top: 10px;\n      width: 0; \n      height: 0;\n      border-width: 8px;\n      border-style: solid;\n      border-color:  transparent #666666 transparent transparent ;\n    }\n    .arrow-right {\n      position: absolute;\n      right: -36px;\n      top: 10px;\n      width: 0; \n      height: 0;\n      border-width: 8px;\n      border-style: solid;\n      border-color:  transparent transparent transparent #666666 ;\n    }\n  }\n  .note-target-node {\n    position: absolute;\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    border: 1px solid #cecece;\n    background: #f9f9f9;\n    .note-text {\n      position: absolute;\n      display: inline-block;\n      width: 150px;\n      top: -10px;\n      color: #333;\n      &.left-side {\n        right: -6px;\n      }\n      &.right-side {\n        left: 27px;\n      }\n    }\n  }\n  .note-source-node {\n    position: absolute;\n    width: 0px;\n    height: 0px;\n  }\n}"
  },
  {
    "filename": "noteSourceNode.js",
    "code": "import {Node} from 'butterfly-dag';\nimport $ from 'jquery';\n\nimport './node.less';\n\nclass BaseNode extends Node {\n  constructor(opts) {\n    super(opts);\n    this.options = opts;\n  }\n  draw = (opts) => {\n    let container = $('<div class=\"note-source-node\"></div>')\n      .attr('id', opts.id)\n      .css('top', opts.top + 'px')\n      .css('left', opts.left + 'px');\n\n    return container[0];\n  }\n}\n\nexport default BaseNode;\n"
  },
  {
    "filename": "noteTargetNode.js",
    "code": "import {Node} from 'butterfly-dag';\nimport $ from 'jquery';\n\nimport './node.less';\n\nclass BaseNode extends Node {\n  constructor(opts) {\n    super(opts);\n    this.options = opts;\n  }\n  draw = (opts) => {\n    let container = $('<div class=\"note-target-node\"></div>')\n      .attr('id', opts.id)\n      .css('top', opts.top + 'px')\n      .css('left', opts.left + 'px');\n\n    let textDom = $(`<span class=\"note-text ${opts.options.side}-side\">${opts.options.text}</span>`);\n    container.append(textDom);\n\n    return container[0];\n  }\n}\n\nexport default BaseNode;\n"
  },
  {
    "filename": "package.json",
    "code": "{\n  \"name\": \"circle dag\",\n  \"cn_name\": \"环形关系分析图\",\n  \"description\": \"a circle dag to show the relation between entities\",\n  \"cn_description\": \"环形分析图，用于更好帮助分析、展示关联具有比例的关联数据、实体的关系\",\n  \"dependencies\": {\n    \"butterfly-dag\": \"*\",\n    \"react\": \"^16.0.0\",\n    \"react-dom\": \"^16.0.0\",\n    \"jquery\": \"*\",\n    \"lodash\": \"*\"\n  }\n}"
  },
  {
    "filename": "theme.less",
    "code": "@butterfly-theme-color-base:#fff;\n@butterfly-normal-font-color-base:#222;;\n@butterfly-overlay-font-color-base:#FFF;\n@butterfly-primary-color-base:#F66902;\n@butterfly-box-border-color-base: #D9D9D9;\n@butterfly-box-shadow-base:0 2px 3px 0 rgba(0,112,204,0.06);\n@butterfly-box-radius-base:100px;\n@butterfly-line-color-base: #BFBFBF;\n// 主题背景色（画布背景色）\n@butterfly-theme-background-color: @butterfly-theme-color-base;\n// （各图形框）普通情况背景色\n@butterfly-theme-color: fade(@butterfly-theme-color-base,80%);\n// 主题色\n@butterfly-primary-color: @butterfly-primary-color-base;\n// 普通情况下字体颜色\n@butterfly-normal-font-color: @butterfly-normal-font-color-base;\n// 主题背景色上的字体颜色及icon颜色\n@butterfly-overlay-font-color: @butterfly-overlay-font-color-base;\n// 拖动时的背景色\n@butterfly-box-move-background-color: fade(@butterfly-primary-color, 20%);\n// 边框的样式\n@butterfly-box-border: 1px solid @butterfly-box-border-color-base;\n@butterfly-box-shadow: @butterfly-box-shadow-base;\n@butterfly-box-radius: @butterfly-box-radius-base;\n@butterfly-box-node-border-hover: 1px solid @butterfly-primary-color;\n// 线条样式\n@butterfly-line-color: @butterfly-line-color-base;"
  }
]